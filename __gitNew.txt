5/16/2018
-routes/projectBlog.js
---->This is the foundation of the basic blog for the future.
---->So far it is barebone and only handles a basic get to / which is the same currently as bcctsem.*./projects/*


-views/projects/blog.ejs
---->The same as views/projects/show.ejs but will be modified to include blog posts on bottom, and mainly exists to avoid accidental changes
-api
---->Basic format to future api of mySQL/AWS RDS and AWS S3


-api/mysql/projects.js
---->Gets projects metadata from mySQL/AWS RDS based on the passed groupID
---->Basic error handling


-api/S3/projects.js
---->Gets project JSON from S3 to get future files. Includes error handling as well as a object "__dangerousDoNotDisplayError" which shows a complex view of the error but should NOT be shown to user as it reveals the Node JS stack. If there are no errors returns the body of the JSON, status code, and ETag.
---->Contains a function handleS3GetError() which filters the error to what is safe to show to user, even though it may not be useful.
---->Contains a function getparams() which returns a basic params object to get the S3 Object

-api/S3/projectSchema
---->Basic layout of the project.json found in all project S3 Folders.

5/17/2018
-api/S3/projects.js
---->Added function getProjectBlogMeta(). Gets the project.json of a project using the projectID passed. Contains some error handling.
---->Added function initializeNewProjectFolder(). Created a new project in the S3. This created a folder based on the passed projectID. Contains error handling and some verification. It also created a project.json in the folder based on the information passed.
---->Added function S3FolderExists(). Self explantory. Passed a number as number or string. Checks for folder like "140/".
---->Added function S3FileExists(). Self explantory. Can take any valid path argument as string.
---->Added function writeS3File().
-------->Writed a file to a project folder and using the passed file name and pased data.
---->Added function handleS3GetError(). Safely handles some errors.
---->Added function isObject(). Checks if a passed argument is a JS object.
---->Added function updateProjectBlogMeta(). Updated a project blogs project.json.
-------->Replaced file with passed data.
---->Added function addBlogPost(). This adds a file to the S3. File name is deteremined by the next file name in project.json in the relative S3 folder.
---->Added function removeFolder(). This removed a whole folder from the S3 storage. This is used by a passed path such as "0/".
---->Added function listObjects(). List objects in an S3 project folder.